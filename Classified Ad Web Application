Below is only a few parts of my large 25+ page Web Application that was in Test and almost implemented in Production.
The application was developed using old HTML coding and Cold Fusion. This was outdated and thus the Company wanted 
it converted to .Net.

Below are various pages and their VB.net Coding.

Update Database Web Forms in Grid View (WF_UpdateClassifiedAd.aspx)
XXXX A 1.1 XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

Vb.net Module (Module.vb) : 

Module Module1
    Friend strDatabase As String = "****"


    Friend strUserID As String = "****"

    Friend strPssWd As String = "****"

End Module

<asp:GridView ID="UpdateAds" runat="server" align="center" 
                    Width="100%" AllowSorting="True" AutoGenerateColumns="False" 
                    BorderColor="Black" BorderStyle="Solid" >
                        <Columns>
                            
                            <asp:TemplateField HeaderText="Action" SortExpression="Date">
                            <ItemTemplate>
 <asp:LinkButton ID="LinkButton1" runat="server" CommandName="Select" >Display</asp:LinkButton> 
                            </ItemTemplate>
                                <ControlStyle Width="45px" />
 <ItemStyle HorizontalAlign="Center" VerticalAlign="Middle" Width="100px" />
                            </asp:TemplateField>
                            
                            <asp:BoundField DataField="Classid" HeaderText="ID" 
                                SortExpression="Date" > 
                           <ItemStyle cssClass="grid_padding" />
                            </asp:BoundField>

<asp:BoundField DataField="Addate" HeaderText="Date" SortExpression="Date" 
                                DataFormatString="{0:d}" >
                            <ItemStyle cssClass="grid_padding" />
                            </asp:BoundField>

                            <asp:BoundField DataField="username" HeaderText="User Name" 
                                SortExpression="Date" > 
                           <ItemStyle cssClass="grid_padding" />
                            </asp:BoundField>

                            <asp:BoundField DataField="category" HeaderText="Category" SortExpression="Date"> 
                            <ItemStyle cssClass="grid_padding" />
                            </asp:BoundField>

                            <asp:BoundField DataField="description" HeaderText="Description" 
                                SortExpression="Date" >                
                            <ItemStyle CssClass="grid_padding2" />
                            </asp:BoundField>
                                             
                        </Columns>
                        <HeaderStyle BackColor="#D9F9FF" Font-Underline="False" 
                            CssClass="linkNoUnderline" />
                </asp:GridView>

Imports System
Imports System.IO
Imports System.Data
Imports System.Data.OleDb
Imports System.Text
Public Class WF_UpdateClassifiedAd
    Inherits System.Web.UI.Page

    Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
        If Not IsPostBack Then
            'If Not Display Is Nothing Then

            Dim conn As OleDbConnection = New OleDbConnection("Provider=""****"";user id=" & strUserID & ";data source=" & strDatabase & ";password=" & strPssWd)

            Dim usernameQuery As String
            Dim UserQ As System.Security.Principal.IPrincipal
            UserQ = System.Web.HttpContext.Current.User
            usernameQuery = UserQ.Identity.Name.Substring(3).ToUpper

            '************************************ Validate if Admin Logged in
            Dim straccess As String = "Admin"

            conn.Open()
            
     Dim strSelectadmin As OleDbCommand = New OleDbCommand(" SELECT * FROM
     adminusers where upper(Username) = '" & usernameQuery.ToUpper & "' and 
     accesslevel = '" & straccess & "' and active = 'Y'", conn)

            Dim OracleDataAdapteradmin As OleDbDataAdapter = New OleDbDataAdapter
            OracleDataAdapteradmin.SelectCommand = strSelectadmin
            Dim Dsadmin As DataSet = New DataSet
            Dsadmin.Clear()

	     ‘adminusers is table name
            OracleDataAdapteradmin.Fill(Dsadmin, "adminusers")

            If Dsadmin.Tables(0).Rows.Count > 0 Then
                AdminB.Visible = True
            End If
            '*****************************

	    ‘fill Grid View
            Dim ClassifiedStr As OleDbCommand = New OleDbCommand("Select Classid, Addate,
 	     Username, Category, Description FROM t_classifieds Where upper(Username) like 
            upper('%" & usernameQuery & "%')", conn)

            Dim OracleDataAdapterAds As OleDbDataAdapter = New OleDbDataAdapter
            OracleDataAdapterAds.SelectCommand = ClassifiedStr
            Dim DsAds As DataSet = New DataSet
            DsAds.Clear()

            OracleDataAdapterAds.Fill(DsAds, "t_classifieds")
            UpdateAds.DataSource = DsAds
            UpdateAds.DataMember = "t_classifieds"
            UpdateAds.DataBind()
            numberRecords.Text = UpdateAds.Rows.Count.ToString()
        End If
        
    End Sub

    Protected Sub UpdateAds_SelectedIndexChanged(sender As Object, e As EventArgs) Handles UpdateAds.SelectedIndexChanged
        Dim strSelect As String
        Dim strFilter As String = " "
        Dim counter As Integer = 0
        Dim v As Integer = 0

	‘Allows the person to click display link and select row
        Dim row As GridViewRow = UpdateAds.SelectedRow
        strFilter = row.Cells(1).Text

        'In order for DispAd.aspx Page... Classid is Index[0]
        strSelect = "SELECT Classid, Addate, Category, Username, Phonenbr, Email, Description, Fulldescription, location FROM t_classifieds WHERE Classid = '" & strFilter & "' "


        Page.Session.Add("Update_Values", strSelect)
        Response.Redirect("DispAdUpdate.aspx")
    End Sub

    Protected Sub AdminB_Click(sender As Object, e As EventArgs) Handles AdminB.Click
        Response.Redirect("Main.aspx")
    End Sub
End Class

Display Data for Selected Grid View row (DispAdUpdate.aspx)
XXXXXXX A 1.2 XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

Oracle Procedures ***********************************

CREATE OR REPLACE PROCEDURE update_classifieds
(val_id                  t_classifieds.Classid%type,
val_date        t_classifieds.Addate%type,
val_category         t_classifieds.Category%type, 
 val_user        t_classifieds.Username%type,  
val_phone        t_classifieds.phonenbr%type,
  val_email         t_classifieds.Email%type,
val_shortDes        t_classifieds.Description%type,
val_longDes        t_classifieds.Fulldescription%type,
val_location        t_classifieds.location%type)  
IS
BEGIN
UPDATE t_classifieds SET 
                Addate = val_date, 
                Category = val_category, 
                Username = val_user,
                Phonenbr = val_phone, 
                Email = val_email, 
                Description = val_shortDes, 
                Fulldescription = val_longDes,
                Location = val_location,
                Where Classid = val_id;

COMMIT;
END;
**********************************************************
VB.Net Coding

Imports System
Imports System.IO
Imports System.Data
Imports System.Data.OleDb
Imports System.Text
Public Class DispAdUpdate
    Inherits System.Web.UI.Page

    Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
        Dim strSearch As String
        'Whole select statement
        strSearch = Page.Session.Item("Update_Values")

        If Not IsPostBack Then

            Dim conn As OleDbConnection = New OleDbConnection("Provider=""****"";user id=" & strUserID & ";data source=" & strDatabase & ";password=" & strPssWd)

            '************************************ Validate if Admin Logged in
            Dim username As String
            Dim User As System.Security.Principal.IPrincipal
            User = System.Web.HttpContext.Current.User
            username = User.Identity.Name.Substring(3)

            Dim straccess As String = "Admin"

            conn.Open()
            Dim strSelectadmin As OleDbCommand = New OleDbCommand(" SELECT * FROM adminusers where upper(Username) = '" & username.ToUpper & "' and accesslevel = '" & straccess & "' and active = 'Y'", conn)

            Dim OracleDataAdapteradmin As OleDbDataAdapter = New OleDbDataAdapter
            OracleDataAdapteradmin.SelectCommand = strSelectadmin
            Dim Dsadmin As DataSet = New DataSet
            Dsadmin.Clear()
            OracleDataAdapteradmin.Fill(Dsadmin, "adminusers")

            If Dsadmin.Tables(0).Rows.Count > 0 Then
                AdminB.Visible = True
            End If


            '*****************************

            'Display All Classified Ads listed in the Database based on the following format/order
            'Date    Name    Home Phone Number     Description

            Dim ClassifiedStr As OleDbCommand = New OleDbCommand(strSearch, conn)
            Dim OracleDataAdapterAds As OleDbDataAdapter = New OleDbDataAdapter
            OracleDataAdapterAds.SelectCommand = ClassifiedStr
            Dim DsAds As DataSet = New DataSet
            DsAds.Clear()
            OracleDataAdapterAds.Fill(DsAds, "t_classifieds")

            'Item Index based on WF_UpdateClassifiedAd.aspx Select Statement
            If Not DsAds.Tables(0).Rows(0).Item(0) Is DBNull.Value Then
                idText.Text = DsAds.Tables(0).Rows(0).Item(0)
            End If
            If Not DsAds.Tables(0).Rows(0).Item(1) Is DBNull.Value Then
                DateText.Text = DsAds.Tables(0).Rows(0).Item(1)
            End If
            If Not DsAds.Tables(0).Rows(0).Item(3) Is DBNull.Value Then
                UserText.Text = DsAds.Tables(0).Rows(0).Item(3)
            End If
            If Not DsAds.Tables(0).Rows(0).Item(4) Is DBNull.Value Then
                PhoneText.Text = DsAds.Tables(0).Rows(0).Item(4)
            End If
            If Not DsAds.Tables(0).Rows(0).Item(5) Is DBNull.Value Then
                EmailText.Text = DsAds.Tables(0).Rows(0).Item(5)
            End If
            If Not DsAds.Tables(0).Rows(0).Item(6) Is DBNull.Value Then
                ShortText.Text = DsAds.Tables(0).Rows(0).Item(6)
            End If
            If Not DsAds.Tables(0).Rows(0).Item(7) Is DBNull.Value Then
                LongText3.Value = DsAds.Tables(0).Rows(0).Item(7)
            End If
            If Not DsAds.Tables(0).Rows(0).Item(8) Is DBNull.Value Then
                LocationText.Text = DsAds.Tables(0).Rows(0).Item(8)
            End If

            Dim categoryV = DsAds.Tables(0).Rows(0).Item(2)

            Dim ClassifiedStrCat As OleDbCommand = New OleDbCommand("SELECT * FROM t_category order by category = '" & categoryV & "'", conn)
            OracleDataAdapterAds.SelectCommand = ClassifiedStrCat
            CategoryList.DataSource = DsAds
            CategoryList.DataMember = "t_classifieds"
            CategoryList.DataBind()
            '************************************************************************
            Dim ClassifiedStrLoc As OleDbCommand = New OleDbCommand("SELECT DISTINCT location FROM t_classifieds where not location is null order by location  ", conn)

            Dim OracleDataAdapterAds3 As OleDbDataAdapter = New OleDbDataAdapter
            OracleDataAdapterAds3.SelectCommand = ClassifiedStrLoc
            Dim DsAdsL As DataSet = New DataSet
            DsAdsL.Clear()

            If Not (DsAdsL Is Nothing) Then
                OracleDataAdapterAds3.Fill(DsAdsL, "t_classifieds")
                LocationText.DataSource = DsAdsL
                LocationText.DataMember = "t_classifieds"
                LocationText.DataBind()
            End If

            '*************************************************************************

            Dim ClassifiedStrCat2 As OleDbCommand = New OleDbCommand("SELECT * FROM t_category order by category ", conn)
            Dim OracleDataAdapterAds2 As OleDbDataAdapter = New OleDbDataAdapter
            OracleDataAdapterAds2.SelectCommand = ClassifiedStrCat2

            Dim DsAds2 As DataSet = New DataSet
            DsAds2.Clear()

            OracleDataAdapterAds2.Fill(DsAds2, "t_classifieds")
            CategoryList.DataSource = DsAds2
            CategoryList.DataMember = "t_classifieds"
            CategoryList.DataBind()
        End If
    End Sub

    Protected Sub PhoneText_TextChanged(sender As Object, e As EventArgs) Handles PhoneText.TextChanged

    End Sub

    Protected Sub CategoryList_SelectedIndexChanged(sender As Object, e As EventArgs) Handles CategoryList.SelectedIndexChanged
        
    End Sub

    Protected Sub BtnUpdate_Click(sender As Object, e As EventArgs) Handles BtnUpdate.Click

        Dim conn As OleDbConnection = New OleDbConnection("Provider=""MSDAORA.1"";user id=" & strUserID & ";data source=" & strDatabase & ";password=" & strPssWd)

        Dim ClassifiedStr As New OleDbCommand

        ClassifiedStr.CommandType = CommandType.StoredProcedure
        ClassifiedStr.CommandText = "update_classifieds"
        ClassifiedStr.Connection = conn

        If Phone.Text <> "" Then
            If EmailText.Text <> "" Then
                If ShortText.Text <> "" Then
                    If LongText3.Value <> "" Then

                        'Must be organized based on Stored Procedure
                        ClassifiedStr.Parameters.Add("val_id", OleDbType.Numeric).Value = idText.Text   '[0]
                        ClassifiedStr.Parameters.Add("val_date", OleDbType.Date).Value = DateText.Text '[1]
                        ClassifiedStr.Parameters.Add("val_category", OleDbType.VarChar, 40).Value = CategoryList.Text '[2]
                        ClassifiedStr.Parameters.Add("val_user", OleDbType.VarChar, 20).Value = UserText.Text '[3]
                        ClassifiedStr.Parameters.Add("val_phone", OleDbType.VarChar, 20).Value = PhoneText.Text '[4]
                        ClassifiedStr.Parameters.Add("val_email", OleDbType.VarChar, 50).Value = EmailText.Text '[5]
                        ClassifiedStr.Parameters.Add("val_shortDes", OleDbType.VarChar, 100).Value = ShortText.Text '[6]
                        ClassifiedStr.Parameters.Add("val_longDes", OleDbType.VarChar, 4000).Value = LongText3.Value '[7]
                        ClassifiedStr.Parameters.Add("val_location", OleDbType.VarChar, 20).Value = LocationText.Text '[8]
                        conn.Open()

                        ClassifiedStr.ExecuteNonQuery()
                        conn.Close()

                        Response.Redirect("Wf_UpdateClassifiedAd.aspx")

                    Else
                        Response.Write("<script language=""javascript"">alert('You Must Insert Values for ALL Input Values.');</script>")
                    End If
                Else
                    Response.Write("<script language=""javascript"">alert('You Must Insert Values for ALL Input Values.');</script>")
                End If
            Else
                Response.Write("<script language=""javascript"">alert('You Must Insert Values for ALL Input Values.');</script>")
            End If
        Else
            Response.Write("<script language=""javascript"">alert('You Must Insert Values for ALL Input Values.');</script>")
        End If

    End Sub

    Protected Sub AdminB_Click(sender As Object, e As EventArgs) Handles AdminB.Click
        Response.Redirect("Main.aspx")
    End Sub

    Protected Sub BtnCancel_Click(sender As Object, e As EventArgs) Handles BtnCancel.Click
        Response.Redirect("Wf_UpdateClassifiedAd.aspx")
    End Sub
End Class
XXXXXXX A END XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

Display Database Information in a Grid View (FILE NAME: WF_AddClassifiedAd.aspx)
XXXXXXX B 1.1 XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

Vb.net Module (Module.vb) : 

Module Module1
    Friend strDatabase As String = "****"


    Friend strUserID As String = "****"

    Friend strPssWd As String = "****"

End Module

 ‘To make this work, the GridView needs AutoGenerateColumns, DataKeyNames and AutoGenerateSelectButton. ID BoundField is put to Hidden as well with each one having DataField defined to database column.

<asp:GridView ID="DisplayClassifieds" runat="server" align="center" 
                    Width="100%" AllowSorting="True" AutoGenerateColumns="False" 
                    AutoGenerateSelectButton="True" 
                    BorderColor="Black" BorderStyle="Solid" DataKeyNames="Classid" 
                    cssClass="grid_padding">
                        <Columns>
                         <asp:BoundField DataField="Classid" HeaderText="ID" 
                                SortExpression="Date" Visible = "false"> 
                           <ItemStyle cssClass="grid_padding" Width="60px" />
                            </asp:BoundField>

<asp:BoundField DataField="Addate" HeaderText="Date" SortExpression="Date" 
                                DataFormatString="{0:d}" >
                            <ItemStyle cssClass="grid_padding" />
                            </asp:BoundField>

                            <asp:BoundField DataField="username" HeaderText="User Name" 
                                SortExpression="Date" > 
                           <ItemStyle cssClass="grid_padding" />
                            </asp:BoundField>

<asp:BoundField DataField="category" HeaderText="Category" SortExpression="Date"> 
                            <ItemStyle cssClass="grid_padding" />
                            </asp:BoundField>

<asp:BoundField DataField="description" HeaderText="Description" 
                                SortExpression="Date" >                
                            <ItemStyle CssClass="grid_padding2" />
                            </asp:BoundField>
                                             
                        </Columns>
                        <HeaderStyle BackColor="#D9F9FF" Font-Underline="False" 
                            CssClass="linkNoUnderline" />
                        <SelectedRowStyle BackColor="#99CCFF" />
                </asp:GridView>

Oracle Procedures ***********************************
CREATE SEQUENCE t_classified_seq
INCREMENT BY 1 start with 100 maxvalue 9999999 NOCYCLE;

After it runs, make the following Stored Procedures:

CREATE OR REPLACE PROCEDURE Insert_classifieds 
	(val_date        t_classifieds.Addate%type,
val_category         t_classifieds.Category%type, 
 	val_user        t_classifieds.Username%type,  
val_phone        t_classifieds.phonenbr%type,
  	val_email         t_classifieds.Email%type,
val_shortDes        t_classifieds.Description%type,
val_longDes        t_classifieds.Fulldescription%type)  
	‘this is for the id type

AS num_classid number; 

BEGIN
 	
‘this increments the id from the created sequence above
SELECT t_classified_seq.nextval into num_classid from dual;  
 	‘the order of these are set in stone once the store procedure is made
	‘t_classifieds is table name
INSERT INTO t_classifieds (Classid, Addate, Category, Username, Phonenbr, Email, Description, Fulldescription) 
VALUES (num_classid, val_date, val_category, val_user, val_phone, val_email, val_shortDes, val_longDes);  

COMMIT;  
END;



CREATE OR REPLACE PROCEDURE delete_classifieds
(val_id                  t_classifieds.Classid%type)  

IS
BEGIN
DELETE t_classifieds WHERE Classid = val_id;
COMMIT;
END;
**********************************************************
VB.Net Coding

Imports System
Imports System.IO
Imports System.Data
Imports System.Data.OleDb
Imports System.Text
Public Class WF_AddClassifiedAd
    Inherits System.Web.UI.Page
    
Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load       
 If Not IsPostBack Then
            'If Not Display Is Nothing Then

            Dim conn As OleDbConnection = New OleDbConnection("Provider=""****"";user id=" & strUserID & ";data source=" & strDatabase & ";password=" & strPssWd)

            '************************************ Validate if Admin Logged in
            Dim usernameQuery As String
            Dim UserQ As System.Security.Principal.IPrincipal
            UserQ = System.Web.HttpContext.Current.User
            usernameQuery = User.Identity.Name.Substring(3).ToUpper
            'usernameQuery = "W33716"

                Dim straccess As String = "Admin"

                conn.Open()
            Dim strSelectadmin As OleDbCommand = New OleDbCommand(" SELECT * FROM adminusers where upper(Username) = '" & usernameQuery.ToUpper & "' and accesslevel = '" & straccess & "' and active = 'Y'", conn)
                Dim OracleDataAdapteradmin As OleDbDataAdapter = New OleDbDataAdapter
                OracleDataAdapteradmin.SelectCommand = strSelectadmin
                Dim Dsadmin As DataSet = New DataSet
                Dsadmin.Clear()
                OracleDataAdapteradmin.Fill(Dsadmin, "adminusers")

                If Dsadmin.Tables(0).Rows.Count > 0 Then
                    AdminB.Visible = True
                End If

            '*****************************

            Dim ClassifiedStr As OleDbCommand = New OleDbCommand("Select Classid, Addate, Username, Category, Description FROM t_classifieds Where upper(Username) like upper('%" & usernameQuery & "%')", conn)
            Dim OracleDataAdapterAds As OleDbDataAdapter = New OleDbDataAdapter
            OracleDataAdapterAds.SelectCommand = ClassifiedStr
            Dim DsAds As DataSet = New DataSet
            DsAds.Clear()

            OracleDataAdapterAds.Fill(DsAds, "t_classifieds")
            DisplayClassifieds.DataSource = DsAds
            DisplayClassifieds.DataMember = "t_classifieds"
            DisplayClassifieds.DataBind()
            numberRecords.Text = DisplayClassifieds.Rows.Count.ToString()
        End If
        'End If

    End Sub

    Protected Sub Insert_Click(sender As Object, e As EventArgs) Handles BtnInsert.Click
        Response.Redirect("WF_InsertNewRecord.aspx")
    End Sub

    Protected Sub AdminB_Click(sender As Object, e As EventArgs) Handles AdminB.Click
        Response.Redirect("Main.aspx")
    End Sub

    Protected Sub numberRecords_TextChanged(sender As Object, e As EventArgs) Handles numberRecords.TextChanged

    End Sub

    Protected Sub BtnDelete_Click(sender As Object, e As EventArgs) Handles BtnDelete.Click

        Dim conn As OleDbConnection = New OleDbConnection("Provider=""****"";user id=" & strUserID & ";data source=" & strDatabase & ";password=" & strPssWd)

        Dim usernameQuery As String
        Dim UserQ As System.Security.Principal.IPrincipal
        UserQ = System.Web.HttpContext.Current.User
        usernameQuery = User.Identity.Name.Substring(3).ToUpper


        If Page.IsValid Then
            If DisplayClassifieds.SelectedIndex = -1 Then
                Response.Write("<script language=""javascript"">alert('You must select a record.');</script>")
                Exit Sub
            End If


            Dim ClassifiedStr As New OleDbCommand
            ClassifiedStr.CommandType = CommandType.StoredProcedure
            ClassifiedStr.CommandText = "delete_classifieds"
            ClassifiedStr.Connection = conn

            'Must be organized based on Stored Procedure
            'DataKey is the DataKey that we labeled as Classid(same name as ID field in Oracle)
            ClassifiedStr.Parameters.Add("val_id", OleDbType.Numeric).Value = CInt(DisplayClassifieds.SelectedDataKey.Value)
            conn.Open()

            ClassifiedStr.ExecuteNonQuery()


            'Now reload grid to show the deleted record gone
            Dim strSearch As String
            'Whole select statement
            strSearch = "Select Classid, Addate, Username, category, description FROM t_classifieds Where upper(Username) like upper('%" & usernameQuery & "%')"
            Dim ClassifiedStr2 As OleDbCommand = New OleDbCommand(strSearch, conn)
            Dim OracleDataAdapterAds As OleDbDataAdapter = New OleDbDataAdapter
            OracleDataAdapterAds.SelectCommand = ClassifiedStr2
            Dim DsAds As DataSet = New DataSet
            DsAds.Clear()
            OracleDataAdapterAds.Fill(DsAds, "t_classifieds")
            DisplayClassifieds.DataSource = DsAds
            DisplayClassifieds.DataMember = "t_classifieds"
            DisplayClassifieds.DataBind()

            conn.Close()
            Response.AddHeader("Refresh", "1")
            Response.Redirect("WF_AddClassifiedAd.aspx")

            BtnDelete.OnClientClick = False
        End If
    End Sub

WHEN INSERT BUTTON IS CLICKED ("WF_InsertNewRecord.aspx")
XXXXXXX B 1.2 XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

Imports System
Imports System.IO
Imports System.Data
Imports System.Data.OleDb
Imports System.Text
Imports System.Data.SqlClient
Imports Microsoft.Office.Interop.Outlook
Imports Microsoft.Office.Interop

Public Class WF_InsertNewRecord
    Inherits System.Web.UI.Page

    Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load

        Dim usernameQuery As String
        Dim UserQ As System.Security.Principal.IPrincipal
        UserQ = System.Web.HttpContext.Current.User
        usernameQuery = User.Identity.Name.Substring(3).ToUpper
        'usernameQuery = "W33716"
        UserText.Text = usernameQuery

        Dim time = DateTime.Now.ToString("MM/dd/yyy")
        DateText.Text = time

        Dim conn As OleDbConnection = New OleDbConnection("Provider=""****"";user id=" & strUserID & ";data source=" & strDatabase & ";password=" & strPssWd)

        '************************************ Validate if Admin Logged in
        If Not IsPostBack Then

            Dim username As String
            Dim User As System.Security.Principal.IPrincipal
            User = System.Web.HttpContext.Current.User
            username = User.Identity.Name.Substring(3)
            'username = "w48492"
            Dim straccess As String = "Admin"

            conn.Open()
            Dim strSelectadmin As OleDbCommand = New OleDbCommand(" SELECT * FROM adminusers where upper(Username) = '" & username.ToUpper & "' and accesslevel = '" & straccess & "' and active = 'Y'", conn)
            Dim OracleDataAdapteradmin As OleDbDataAdapter = New OleDbDataAdapter
            OracleDataAdapteradmin.SelectCommand = strSelectadmin
            Dim Dsadmin As DataSet = New DataSet
            Dsadmin.Clear()
            OracleDataAdapteradmin.Fill(Dsadmin, "adminusers")

            If Dsadmin.Tables(0).Rows.Count > 0 Then
                AdminB.Visible = True
            End If


            '*****************************
            If Not CategoryList Is Nothing Then

                Dim ClassifiedStrCat As OleDbCommand = New OleDbCommand("SELECT category FROM t_category order by category", conn)

                Dim OracleDataAdapterAds1 As OleDbDataAdapter = New OleDbDataAdapter
                OracleDataAdapterAds1.SelectCommand = ClassifiedStrCat
                Dim DsAds As DataSet = New DataSet
                DsAds.Clear()

                If Not (DsAds Is Nothing) Then
                    OracleDataAdapterAds1.Fill(DsAds, "t_classifieds")
                    CategoryList.DataSource = DsAds
                    CategoryList.DataMember = "t_classifieds"
                    CategoryList.DataBind()
                End If


            End If
             ' ************************************************************************
            Dim ClassifiedStrLoc As OleDbCommand = New OleDbCommand("SELECT DISTINCT location FROM t_classifieds where not location is null order by location  ", conn)

            Dim OracleDataAdapterAds3 As OleDbDataAdapter = New OleDbDataAdapter
            OracleDataAdapterAds3.SelectCommand = ClassifiedStrLoc
            Dim DsAdsL As DataSet = New DataSet
            DsAdsL.Clear()

            If Not (DsAdsL Is Nothing) Then
                OracleDataAdapterAds3.Fill(DsAdsL, "t_classifieds")
                LocationText.DataSource = DsAdsL
                LocationText.DataMember = "t_classifieds"
                LocationText.DataBind()
            End If
            '*************************************************************************
        End If

    End Sub

    Protected Sub PhoneText_TextChanged(sender As Object, e As EventArgs) Handles PhoneText.TextChanged

    End Sub

    Protected Sub Insert_Click(sender As Object, e As EventArgs) Handles Insert.Click
        AlertResponse.Visible = False

        Dim conn As OleDbConnection = New OleDbConnection("Provider=""****"";user id=" & strUserID & ";data source=" & strDatabase & ";password=" & strPssWd)

        Dim ClassifiedStr As New OleDbCommand

        ClassifiedStr.CommandType = CommandType.StoredProcedure
        ClassifiedStr.CommandText = "Insert_classifieds"
        ClassifiedStr.Connection = conn

        If Phone.Text <> "" Then
            If EmailText.Text <> "" Then
                If ShortText.Text <> "" Then
                    If longText.Value <> "" Then

                        'Must be organized based on Stored Procedure
                        ClassifiedStr.Parameters.Add("val_date", OleDbType.Date).Value = DateText.Text
                        ClassifiedStr.Parameters.Add("val_category", OleDbType.VarChar, 40).Value = CategoryList.Text
                        ClassifiedStr.Parameters.Add("val_user", OleDbType.VarChar, 20).Value = UserText.Text
                        ClassifiedStr.Parameters.Add("val_phone", OleDbType.VarChar, 20).Value = PhoneText.Text
                        ClassifiedStr.Parameters.Add("val_email", OleDbType.VarChar, 50).Value = EmailText.Text
                        ClassifiedStr.Parameters.Add("val_shortDes", OleDbType.VarChar, 100).Value = ShortText.Text
                        ClassifiedStr.Parameters.Add("val_longDes", OleDbType.VarChar, 4000).Value = longText.Value
                        ClassifiedStr.Parameters.Add("val_location", OleDbType.VarChar, 20).Value = LocationText.Text '[8]

                        conn.Open()

                        ClassifiedStr.ExecuteNonQuery()
                        conn.Close()

                        AlertResponse.Visible = True
                        Response.AddHeader("Refresh", "5")

                    Else
                        Response.Write("<script language=""javascript"">alert('You Must Insert Values for ALL Input Values.');</script>")
                    End If
                Else
                    Response.Write("<script language=""javascript"">alert('You Must Insert Values for ALL Input Values.');</script>")
                End If
            Else
                Response.Write("<script language=""javascript"">alert('You Must Insert Values for ALL Input Values.');</script>")
            End If
        Else
            Response.Write("<script language=""javascript"">alert('You Must Insert Values for ALL Input Values.');</script>")
        End If

    End Sub

    Protected Sub AdminB_Click(sender As Object, e As EventArgs) Handles AdminB.Click
        Response.Redirect("Main.aspx")
    End Sub

    Protected Sub BtnCancel_Click(sender As Object, e As EventArgs) Handles BtnCancel.Click
        Response.Redirect("WF_AddClassifiedAd.aspx")
    End Sub
XXXXXXX B END XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

Display All Records from Database (WF_DisplayAll.aspx)
XXXXXXX C 1.1 XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

Imports System
Imports System.IO
Imports System.Data
Imports System.Data.OleDb
Imports System.Text

Public Class WF_DisplayAll
    Inherits System.Web.UI.Page
    Dim WithEvents Main As New Button

    Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load

        ' Makes so it runs the first time
        If Not IsPostBack Then
            If Not DisplayAllCA Is Nothing Then

                Dim conn As OleDbConnection = New OleDbConnection("Provider=""****"";user id=" & strUserID & ";data source=" & strDatabase & ";password=" & strPssWd)

                '************************************ Validate if Admin Logged in
                Dim username As String
                Dim User As System.Security.Principal.IPrincipal
                User = System.Web.HttpContext.Current.User
                username = User.Identity.Name.Substring(3)
                Dim straccess As String = "Admin"

                conn.Open()

                Dim strSelectadmin As OleDbCommand = New OleDbCommand(" SELECT * FROM adminusers where upper(Username) = '" & username.ToUpper & "' and accesslevel = '" & straccess & "' and active = 'Y'", conn)

                Dim OracleDataAdapteradmin As OleDbDataAdapter = New OleDbDataAdapter
                OracleDataAdapteradmin.SelectCommand = strSelectadmin
                Dim Dsadmin As DataSet = New DataSet
                Dsadmin.Clear()
                OracleDataAdapteradmin.Fill(Dsadmin, "adminusers")

                If Dsadmin.Tables(0).Rows.Count > 0 Then
                    AdminB.Visible = True
                End If
                '*****************************

                'Display All Classified Ads listed in the Database based on the following format/order
                'Date    Name    Home Phone Number     Description

                Dim ClassifiedStr As OleDbCommand = New OleDbCommand("SELECT classid, Addate, username, Phonenbr, email, description FROM t_classifieds", conn)
                Dim OracleDataAdapterAds As OleDbDataAdapter = New OleDbDataAdapter
                OracleDataAdapterAds.SelectCommand = ClassifiedStr
                Dim DsAds As DataSet = New DataSet
                DsAds.Clear()
                OracleDataAdapterAds.Fill(DsAds, "t_classifieds")
                DisplayAllCA.DataSource = DsAds
                DisplayAllCA.DataMember = "t_classifieds"
                DisplayAllCA.DataBind()
            End If
        End If
    End Sub

    Protected Sub Main_Click(sender As Object, e As EventArgs) Handles Main.Click

        Response.Redirect("Index.aspx", True)
    End Sub

    Protected Sub DisplayAllCA_SelectedIndexChanged(sender As Object, e As EventArgs) Handles DisplayAllCA.SelectedIndexChanged

    End Sub

    Protected Sub AdminB_Click(sender As Object, e As EventArgs) Handles AdminB.Click
        Response.Redirect("Main.aspx")
    End Sub
End Class

XXXXXXX C END XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

Search Database and populate a Grid View Listing (WF_Search)
XXXXXXX D 1.1 XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
 
Imports System
Imports System.IO
Imports System.Data
Imports System.Data.OleDb
Imports System.Text
Public Class WF_Search
    Inherits System.Web.UI.Page

    Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
        If Not IsPostBack Then
            If Not CategoryListBox Is Nothing Then

                Dim conn As OleDbConnection = New OleDbConnection("Provider=""****"";user id=" & strUserID & ";data source=" & strDatabase & ";password=" & strPssWd)

                Dim ClassifiedStrCat As OleDbCommand = New OleDbCommand("SELECT category FROM t_category order by category", conn)
                Dim ClassifiedStrLoc As OleDbCommand = New OleDbCommand("SELECT DISTINCT location FROM t_classifieds where not location is null order by location  ", conn)

                Dim OracleDataAdapterAds1 As OleDbDataAdapter = New OleDbDataAdapter
                OracleDataAdapterAds1.SelectCommand = ClassifiedStrCat

                Dim OracleDataAdapterAds2 As OleDbDataAdapter = New OleDbDataAdapter
                OracleDataAdapterAds2.SelectCommand = ClassifiedStrLoc

                Dim DsAds As DataSet = New DataSet
                Dim DsAdsL As DataSet = New DataSet

                DsAds.Clear()
                DsAdsL.Clear()

                If Not (DsAds Is Nothing) Then
                    OracleDataAdapterAds1.Fill(DsAds, "t_classifieds")
                    CategoryListBox.DataSource = DsAds
                    CategoryListBox.DataMember = "t_classifieds"
                    CategoryListBox.DataBind()
`makes a blank field so that user doesn’t have to choose an option
                    Dim newListItem As ListItem
                    newListItem = New ListItem("", "")
                    newListItem.Selected = False
                    CategoryListBox.Items.Add(newListItem)

                End If

                If Not (DsAdsL Is Nothing) Then
                    OracleDataAdapterAds2.Fill(DsAdsL, "t_classifieds")
                    LocationListBox.DataSource = DsAdsL
                    LocationListBox.DataMember = "t_classifieds"
                    LocationListBox.DataBind()
			`makes a blank field so that user doesn’t have to choose an option
                    Dim newListItem2 As ListItem
                    newListItem2 = New ListItem("", "")
                    newListItem2.Selected = False
                    LocationListBox.Items.Add(newListItem2)
                End If

            End If
        End If

    End Sub

    Protected Sub BtnDesc_Click(sender As Object, e As EventArgs) Handles BtnDesc.Click
        Dim strSelect As String
        Dim strFilter As String = " "
        Dim counter As Integer = 0

        strSelect = "SELECT classid, Addate, username, category, description FROM t_classifieds"

        'Filters the options that the user chooses.
        'First If statement will initiate only if the Category List Box isn't empty (if querying category that is empty, the second option
        ' was to use category = "%". Issue was that this format didn't work so a counter was put in place to pull a different Select Statement at the end of the code
        If CategoryListBox.Text.Length <> 0 Then

            strFilter = strFilter & " where category = '" & CategoryListBox.SelectedItem.Value & "'"
            '****************************************************************************************
            If LocationListBox.Text.Length <> 0 Then
                strFilter = strFilter & " and location = '" & LocationListBox.SelectedItem.Value & "'"

                If DescriptionQuery.Text.Length <> 0 Then
                    strFilter = strFilter & " and upper(description) like upper('%" & DescriptionQuery.Text & "%')"

                End If

            Else
                If DescriptionQuery.Text.Length <> 0 Then
                    strFilter = strFilter & " and upper(description) like upper('%" & DescriptionQuery.Text & "%')"
                Else

                End If

            End If

        Else

            counter = counter + 1

            If LocationListBox.Text.Length <> 0 Then
                strFilter = strFilter & " where location = '" & LocationListBox.SelectedItem.Value & "'"

                If DescriptionQuery.Text.Length <> 0 Then
                    strFilter = strFilter & " and upper(description) like upper('%" & DescriptionQuery.Text & "%')"
                Else

                End If

            Else

                counter = counter + 1

                If DescriptionQuery.Text.Length <> 0 Then
                    strFilter = strFilter & " where upper(description) like upper('%" & DescriptionQuery.Text & "%')"
                Else
                    counter = counter + 1
                End If

            End If

        End If

        'If all queries where empty (counter = 3)
        If counter = 3 Then
            strSelect = "SELECT classid, Addate, username, category, description FROM t_classifieds"
        Else
            strSelect = strSelect & strFilter
        End If

        'User_Search2 is made up name
        Page.Session.Add("User_Search2", strSelect)
        Response.Redirect("QRY2.aspx")

    End Sub
End Class

Listing Populated Data in Grid View with Select/Update/Delete (QRY2.aspx)
 XXXXXXX D 1.1 XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
 
<asp:GridView ID="DisplayClassifieds" runat="server" align="center" 
                    Width="100%" AllowSorting="True" AutoGenerateColumns="False" 
                    AutoGenerateSelectButton="True" 
                    BorderColor="Black" BorderStyle="Solid" DataKeyNames="Classid" 
                    cssClass="grid_padding">
                        <Columns>

                             <asp:BoundField DataField="Classid" HeaderText="ID" 
                                SortExpression="Date" Visible = "false"> 
                           <ItemStyle cssClass="grid_padding" Width="60px" />
                            </asp:BoundField>

<asp:BoundField DataField="Addate" HeaderText="Date" SortExpression="Date" 
                                DataFormatString="{0:d}" >
                            <ItemStyle cssClass="grid_padding" />
                            </asp:BoundField>

                            <asp:BoundField DataField="username" HeaderText="User Name" 
                                SortExpression="Date" > 
                           <ItemStyle cssClass="grid_padding" />
                            </asp:BoundField>

<asp:BoundField DataField="category" HeaderText="Category" SortExpression="Date"> 
                            <ItemStyle cssClass="grid_padding" />
                            </asp:BoundField>

<asp:BoundField DataField="description" HeaderText="Description" 
                                SortExpression="Date" >                
                            <ItemStyle CssClass="grid_padding2" />
                            </asp:BoundField>
                                             
                        </Columns>
                        <HeaderStyle BackColor="#D9F9FF" Font-Underline="False" 
                            CssClass="linkNoUnderline" />
                        <SelectedRowStyle BackColor="#99CCFF" />
                </asp:GridView>

HOW IT LOADS CODING:
VB.Net Coding

Imports System
Imports System.IO
Imports System.Data
Imports System.Data.OleDb
Imports System.Text
Imports System.Web.UI.WebControls
Imports System.ComponentModel
Public Class QRY2
    Inherits System.Web.UI.Page

    Private Property LinkButton2 As Object
    Private Property LinkButton1 As Object

    Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
        Dim strSearch As String
        'Whole select statement
        strSearch = Page.Session.Item("User_Search2")

        If Not IsPostBack Then
            If Not DisplayClassifieds Is Nothing Then


                Dim conn As OleDbConnection = New OleDbConnection("Provider=""MSDAORA.1"";user id=" & strUserID & ";data source=" & strDatabase & ";password=" & strPssWd)

                

'Display All Classified Ads listed in the Database based on the following format/order
                'Date    Name    Home Phone Number     Description

                Dim ClassifiedStr As OleDbCommand = New OleDbCommand(strSearch, conn)
                Dim OracleDataAdapterAds As OleDbDataAdapter = New OleDbDataAdapter
                OracleDataAdapterAds.SelectCommand = ClassifiedStr
                Dim DsAds As DataSet = New DataSet
                DsAds.Clear()
                OracleDataAdapterAds.Fill(DsAds, "t_classifieds")
                DisplayClassifieds.DataSource = DsAds
                DisplayClassifieds.DataMember = "t_classifieds"
                DisplayClassifieds.DataBind()

            End If
        End If
    End Sub

‘Shows item is selected (if you add color) but this line of code is necessary!!!
    Protected Sub DisplayClassifieds_SelectedIndexChanged(sender As Object, e As EventArgs) Handles DisplayClassifieds.SelectedIndexChanged

        Dim row As GridViewRow = DisplayClassifieds.SelectedRow

    End Sub
XXXXXXX D END XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

